// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: employee.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Proto {
  public static partial class EmployeeService
  {
    static readonly string __ServiceName = "proto.EmployeeService";

    static readonly grpc::Marshaller<global::Proto.EmployeeRequest> __Marshaller_EmployeeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.EmployeeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Employee> __Marshaller_Employee = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Employee.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.DeleteEmployeeResult> __Marshaller_DeleteEmployeeResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.DeleteEmployeeResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Proto.Meeting> __Marshaller_Meeting = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Proto.Meeting.Parser.ParseFrom);

    static readonly grpc::Method<global::Proto.EmployeeRequest, global::Proto.Employee> __Method_GetEmployee = new grpc::Method<global::Proto.EmployeeRequest, global::Proto.Employee>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEmployee",
        __Marshaller_EmployeeRequest,
        __Marshaller_Employee);

    static readonly grpc::Method<global::Proto.EmployeeRequest, global::Proto.Employee> __Method_GetEmployees = new grpc::Method<global::Proto.EmployeeRequest, global::Proto.Employee>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetEmployees",
        __Marshaller_EmployeeRequest,
        __Marshaller_Employee);

    static readonly grpc::Method<global::Proto.EmployeeRequest, global::Proto.DeleteEmployeeResult> __Method_DeleteEmployee = new grpc::Method<global::Proto.EmployeeRequest, global::Proto.DeleteEmployeeResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEmployee",
        __Marshaller_EmployeeRequest,
        __Marshaller_DeleteEmployeeResult);

    static readonly grpc::Method<global::Proto.Employee, global::Proto.Employee> __Method_CreateEmployee = new grpc::Method<global::Proto.Employee, global::Proto.Employee>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEmployee",
        __Marshaller_Employee,
        __Marshaller_Employee);

    static readonly grpc::Method<global::Proto.EmployeeRequest, global::Proto.Meeting> __Method_GetEmployeeMeetings = new grpc::Method<global::Proto.EmployeeRequest, global::Proto.Meeting>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetEmployeeMeetings",
        __Marshaller_EmployeeRequest,
        __Marshaller_Meeting);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.EmployeeReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EmployeeService</summary>
    public abstract partial class EmployeeServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Proto.Employee> GetEmployee(global::Proto.EmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetEmployees(global::Proto.EmployeeRequest request, grpc::IServerStreamWriter<global::Proto.Employee> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.DeleteEmployeeResult> DeleteEmployee(global::Proto.EmployeeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Proto.Employee> CreateEmployee(global::Proto.Employee request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetEmployeeMeetings(global::Proto.EmployeeRequest request, grpc::IServerStreamWriter<global::Proto.Meeting> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EmployeeService</summary>
    public partial class EmployeeServiceClient : grpc::ClientBase<EmployeeServiceClient>
    {
      /// <summary>Creates a new client for EmployeeService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EmployeeServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EmployeeService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EmployeeServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EmployeeServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EmployeeServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Proto.Employee GetEmployee(global::Proto.EmployeeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Employee GetEmployee(global::Proto.EmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Employee> GetEmployeeAsync(global::Proto.EmployeeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Employee> GetEmployeeAsync(global::Proto.EmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEmployee, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Employee> GetEmployees(global::Proto.EmployeeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetEmployees(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Employee> GetEmployees(global::Proto.EmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetEmployees, null, options, request);
      }
      public virtual global::Proto.DeleteEmployeeResult DeleteEmployee(global::Proto.EmployeeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.DeleteEmployeeResult DeleteEmployee(global::Proto.EmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.DeleteEmployeeResult> DeleteEmployeeAsync(global::Proto.EmployeeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.DeleteEmployeeResult> DeleteEmployeeAsync(global::Proto.EmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEmployee, null, options, request);
      }
      public virtual global::Proto.Employee CreateEmployee(global::Proto.Employee request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateEmployee(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Proto.Employee CreateEmployee(global::Proto.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEmployee, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Employee> CreateEmployeeAsync(global::Proto.Employee request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateEmployeeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Proto.Employee> CreateEmployeeAsync(global::Proto.Employee request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEmployee, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Meeting> GetEmployeeMeetings(global::Proto.EmployeeRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetEmployeeMeetings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Proto.Meeting> GetEmployeeMeetings(global::Proto.EmployeeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetEmployeeMeetings, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EmployeeServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EmployeeServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EmployeeServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEmployee, serviceImpl.GetEmployee)
          .AddMethod(__Method_GetEmployees, serviceImpl.GetEmployees)
          .AddMethod(__Method_DeleteEmployee, serviceImpl.DeleteEmployee)
          .AddMethod(__Method_CreateEmployee, serviceImpl.CreateEmployee)
          .AddMethod(__Method_GetEmployeeMeetings, serviceImpl.GetEmployeeMeetings).Build();
    }

  }
}
#endregion
